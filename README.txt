Данный API имитирует работу автомобильного маркетплейса.
Предназначен для получения и изменения данных о торговых площадках,
и машинах продающихся на данных площадках.
Три типа данных с которыми работает данный API: Car - данные о машинах, 
Dealer -данные о торговых площадках, History - данные об изменениях состояния автомобилей.
Для работы с данными типа Car используйте методы /cars.
Для работы с данными типа Dealer используйте метод /dealers
Данные типа History не подлежат изменению и удалению.

Для получения данных типа History используйте методы:
/car_history/<int:car_id> - для получения данных о конкретной машине
/dealer_history/<int:dealer_id> - для получения данных обо всех машинах определенного дилера.
/all_history - для получения данных по всем машинам в базе данных.
В таблице фиксируются изменения цен, дилеров и состояния ( в продаже - не в продаже).
Для получения данных только по продажам к URI  необходимо добавить query string "onsale" и присвоить ему любое значение.

Примеры запросов:
$ curl http://127.0.0.1:5000/car_history/4 - выводит историю изменений по машине с id 4.

curl http://127.0.0.1:5000/dealer_history/2?onsale=0 - история продаж дилера id 2

Работа с данными типа Dealer:

СОЗДАНИЕ И УДАЛЕНИЕ:
/dealers/add позволяет создать новую торговую площадках.
Запрос должен использовать метод POST и удовлетворять схеме Dealer-schema.json
Пример запроса:
$ curl -i -H "Content-Type:application/json" -X POST -d 
'{"name":"Cars24","district":"Krasnogvardeysky","openingtime":"00:00","closingtime":"23:59"}'
 http://127.0.0.1:5000/dealers/add

/dealers/delete/<int:dealer:id> - позволяет удалить Дилера из БД. 
Запрос должен использовать метод DELETE. Пример:
$ curl http://127.0.0.1:5000/dealers/delete/3 -X DELETE

ЧТЕНИЕ
/dealers позволяет получить список всех объектов Dealer.
Возможна дополнительная фильтрация по локации дилера через query string параметр district.
Пример запроса:
$ curl http://127.0.0.1:5000/dealers?district=Peterhof - выдает всех дилеров в Петергофе.
Пример результата:
{"id2": {"name": "ROLF", "district": "Peterhof", "operating": true, "openingtime
": "09:00", "closingtime": "23:59"}}

/dealers/operating позволяет получить список всех работающих дилеров ( operating==True)
Фильтрация через query string параметр district также доступна.

/dealers/operating/opennow позволяет получить список всех работающих дилеров,
 открытых на данный момент времени.
 Фильтрация через query string параметр district также доступна.

ИЗМЕНЕНИЕ
Рабочие часы Дилеров можно изменять с помощью следующего метода:
/dealers/change_worktime/<int:id> - меняет рабочие часы дилера с id указанным в запросе.
Принимает аргументы 'openingtime':'HH:MM' и/или 'closingtime':'HH:MM' в JSON-формате.
Использует метод PUT.

Пример запроса (устанавливаем closingtime на 23:59 для дилера с id2):
$ curl -i -H "Content-Type:application/json" -X PUT -d
 '{"closingtime":"23:59"}' http://127.0.0.1:5000/dealers/change_worktime/2

Расположение дилера можно менять ( в случае переезда) с помощью метода:
/dealers/change_district/<int:id> - id - id Дилера для которого мы хотим изменить локацию.
Принимает аргумент "district":"string" в формате JSON.

Пример(дилер id4 переезжает в Красногвардейский район):
$ curl -i -H "Content-Type:application/json" -X PUT -d
 '{"district":"Krasnogvardeysky"}' http://127.0.0.1:5000/dealers/change_district/4

Состояние Operating также поддается изменению с помощью двух методов:
/dealers/close/<int:id> - закрывает дилера с соответствующим id (устанавливает operating==False)

/dealers/open/<int:id> - открывает дилера с соответствующим id (устанавливает operating==True)
Оба запроса используют метод PUT.
Закрытие переводит все машины указанного дилера в продаже в состояние onsale=False, price=0.
Открытие - возвращает все машины в продажу с последней установленной ценой
Примеры запросов:
$ curl http://127.0.0.1:5000/dealers/close/4 -X PUT
В случае успеха данные методы вернут JSON-объект 'result' (200)
Если дилер отсутствует в БД, методы вернут JSON-объект 'error' (404)

Работа с объектами Car:
СОЗДАНИЕ И УДАЛЕНИЕ:
/сars/add позволяет создать новую машину на продажу.
Запрос должен использовать метод POST и удовлетворять схеме Car-schema.json
Пример:
$ curl -i -H "Content-Type:application/json" -X POST -d
'{"brand":"hyundai","model":"solaris","mileage":"100000", "year_built":"2019","price":"350000","color":"black", "dealer":"4"}'
 http://127.0.0.1:5000/cars/add
В случае успеха возвращает код 201 и JSON объект {'result': 'Created Successfully'}

/cars/delete/<int:id> - удаляет машину  с указанным id из БД.
Использует метод DELETE
Пример:  $ curl http://127.0.0.1:5000/cars/delete/4 -X DELETE - удаляет машину с id4
в случае успеха вернет JSON-объект {'result': 'Car deleted successfully'} и код 200
Если машина с указанным id не существует, вернет ошибку 404 и JSON {'result': 'Car deleted successfully'}

ЧТЕНИЕ:
Операции чтения в случае успеха возвращают список машин в формате {id:{параметры},id:{параметры}}
Если машины не найдены, возвращает 404 и JSON {'error': 'Not Found'}
/cars - возвращает список всех машин из БД.
Доступна фильтрация с помощью одного или нескольких параметров передаваемых через query string
Возможные параметры: year_built, color, brand, model, mileage, vendor_id (id  дилера)
Пример:
$ curl http://127.0.0.1:5000/cars?vendor_id=1"&"color=black - выводим все черные машины Дилера с id 1
Выдача: {"id3": {"brand": "toyota", "model": "celica", "year_built": 2008, "mileage": 40
000, "price": 30000, "onsale": false, "dealer": 1, "color": "green"}, "id4": {"b
rand": "toyota", "model": "land cruiser", "year_built": 2003, "mileage": 400000,
 "price": 300000, "onsale": true, "dealer": 1, "color": "black"}}

/cars/onsale - список всех машин из БД находящихся в продаже.
В остальном аналогичен методу /cars

/cars/sold - список всех машин из БД недоступных на продажу.
В остальном аналогичен методу /cars

/cars/in_district/<district> - список всех машин у дилеров в указанном районе.
Выводит только машины доступные на продажу.
В остальном аналогичен методу /cars

/cars/now - список всех машин у открытых в данный момент Дилеров.
Выводит только машины доступные на продажу.
В остальном аналогичен методу /cars

/cars/now/<district> - список всех машин у открытых в данный момент дилеров определенного района.
Выводит только машины доступные на продажу.
В остальном аналогичен методу /cars
Пример:
$ curl http://127.0.0.1:5000/cars/now/Peterhof - выводит все машины в открытых Дилерах Петергофа

ИЗМЕНЕНИЕ:
Для каждой машины поддерживается изменение дилера, цены и состояния (в продаже - не в продаже)
Изменения доступны по запросу /car_history/<int:id> (кроме случаев закрытия-открытия дилеров)
Используют методы PUT
В случае успеха возвращают JSON объект result и код 200
В случае отсутствия объектов в БД возвращают JSON объект error и код 404

cars/move/<car_id>/<dealer_id> - Перевозим машину с указанным id в магазин (дилер) с указанным Id
ПРИМЕР: $ curl http://127.0.0.1:5000/cars/move/4/1 -X PUT - первозим машину id4 к Дилеру id1

сars/reprice/<car_id>/<price> - устанавливаем машине с  указанным id указанную в запросе цену.
ПРИМЕР:
$ curl http://127.0.0.1:5000/cars/reprice/6/400000 -X POST - устанавливаем машине с id 6 цену в 400000

cars/sell/<car_id> - фиксируем продажу машины с указанным id по последней цене.
cars/buyback/<car_id> - откатываем продажу машины с указанным id.
ПРИМЕРЫ:
$ curl http://127.0.0.1:5000/cars/buyback/6 -X PUT - возвращаем в продажу машину с id 6.



